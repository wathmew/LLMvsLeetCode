def countRangeSum(nums, lower, upper):
    prefix = [0] * len(nums)
    for i in range(1, len(nums)):
        prefix[i] = prefix[i-1] + nums[i]

    count = 0
    for n in prefix:
        if lower <= n <= upper:
            count += 1

    def merge(left_arr, right_arr):
        start, end = 0, 0
        for i in range(len(left_arr)):
            while start < len(right_arr) and right_arr[start] - left_arr[i] < lower:
                start += 1
            while end < len(right_arr) and right_arr[end] - left_arr[i] <= upper:
                end += 1
            count += end - start
        return sorted(left_arr[start:end+1]) + left_arr[i+1:] + right_arr[end+1:]

    def divide(arr):
        if len(arr) <= 1:
            return arr
        mid = len(arr) // 2
        left_arr = divide(arr[:mid])
        right_arr = divide(arr[mid:])
        return merge(left_arr, right_arr)

    return divide(prefix)

# Test the function
nums = [1, 2, 3, 4, 5]
lower = 3
upper = 6
print(countRangeSum(nums, lower, upper))
