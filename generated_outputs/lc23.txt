class Solution:
    def maxProfit(self, k: int, prices: list[int]) -> int:
        if k == 0:
            return 0

        # Initialize dp array with base case
        dp = [[1000, 0] for _ in range(k + 1)]

        for price in prices:
            for i in range(1, k + 1):
                # Update dp[i][0] to be the minimum of the current price minus dp[i-1][1]
                # This represents the maximum profit after buying i times
                dp[i][0] = min(dp[i][0], price - dp[i - 1][1])
                # Update dp[i][1] to be the maximum of the current price minus dp[i-1][0]
                # This represents the maximum profit after selling i times
                dp[i][1] = max(dp[i][1], price - dp[i - 1][0])

        # Return the maximum profit after k transactions
        return dp[k][1]
